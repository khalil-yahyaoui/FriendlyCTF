# In this challenge , we have N1 = p*q and N2 = p*r , C1 and C2 are the encryption of the flag using both modulus N1 and N2
# since p , q and r are primes and we have p is a common factor between N1 and N2 so gcd(N1,N2) = p
# Having p , we can compute q and then decrypt one of the ciphertexts like in previous challs.

from sympy import gcd
from Crypto.Util.number import inverse,long_to_bytes

N1 = 115417401388010337311422778167223614001674366473801847164264004773490677844367700887749560677144417050272196515605978214818195210861804699281666261229750300781973201995544631757674376695145798553903533545087699376765004291931435857335251559503075574605172815892745143804746351758961007131261845452058554583639
N2 = 122178875065732040525772810872556652155530931946041271211566507970140442323498992504005928259524986259226890420952667717649182765037760758500716898186084399554227206631749957397385634731386814815242576604047792285919528890346007139894132652008015839072403892747085496105396389420136539808615844371713429182679
e = 65537
c1 = 17377061913644156131048417718907035997574622071733137029395242122642031517667218946149904410218684538937853040502933851877144105439088661785407620245199132752837473313412403042805184562221425792903336913246040124275307551887864419222693515375909506068550776499879835231099215777632439624311451551726567956870
c2 = 52753332432533353062862477762383691805453837521586413172691597359901029044757555074972422813921856961901716835280216038860186926576624068498046845670633794015829635487867351488025841227905855445783734937250458529680268409237244809082271689450886569041900855447592486061326686222015091459240471806562092186914

p = gcd(N1,N2)
q = N1 // p

phi = (p-1)*(q-1)
d = inverse(e,phi)
m = pow(c,d,n)
print(f"Flag is {long_to_bytes(m)}")
